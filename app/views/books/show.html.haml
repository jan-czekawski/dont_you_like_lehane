%h1.center= @book.title
.row
  .col-md-8.col-md-offset-2
    .row.well
      .col-md-6.flexColumn.center
        = image_tag @book.picture.url(:medium), class: "bookImage"
      .col-md-6
        .bookContent  
          %strong Author:
          = @book.author
        .bookContent
          %strong Description:
          = @book.description
        .bookContent
          %strong Published at:
          = @book.published_at.strftime("%B, %Y")
      .clear
      .bookButtons.center
        -if user_signed_in?
          = link_to "Comment", new_book_comment_path(@book, @comment), class: "btn btn-primary"
          - unless wants_to_read_this?
            = link_to "Add to wishlist", book_future_readers_path(@book), method: :post, class: "btn btn-primary"
          - unless already_read_this?
            = link_to "Already read it", book_readers_path(@book), method: :post, class: "btn btn-primary"
          - if @fut_reader
            = link_to "Remove from wishlist", book_future_reader_path(@book, @fut_reader), method: :delete, class: "btn btn-primary"
          - if @exist_reader
            = link_to "Didn't read it", book_reader_path(@book, @exist_reader), method: :delete, class: "btn btn-primary"
      .commentContent.center
        %h1 Comments:
        - @comments.each do |comment|
          .row
            .col-md-6.col-md-offset-3.thumbnail
              %p= comment.content
              %p
                = "Added #{time_ago_in_words(comment.created_at)} ago, by" 
                = link_to User.find(comment.user_id).name, user_path(User.find(comment.user_id))
                - if user_signed_in? && (comment.user_id == current_user.id || current_user.admin?)
                  %p= link_to "Delete", book_comment_path(@book, comment.id), book_id: @book.id, method: :delete, class: "btn btn-xs btn-danger", data: { confirm: "Are you sure?" }